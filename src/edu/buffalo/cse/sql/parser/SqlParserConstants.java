/* Generated By:JavaCC: Do not edit this line. SqlParserConstants.java */
package edu.buffalo.cse.sql.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface SqlParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int CTCMD = 7;
  /** RegularExpression Id. */
  int SELECTCMD = 8;
  /** RegularExpression Id. */
  int BOOLEAN_LITERALS = 9;
  /** RegularExpression Id. */
  int TRUE = 10;
  /** RegularExpression Id. */
  int FALSE = 11;
  /** RegularExpression Id. */
  int BOOLEAN_OPERATORS = 12;
  /** RegularExpression Id. */
  int UNION = 13;
  /** RegularExpression Id. */
  int AND = 14;
  /** RegularExpression Id. */
  int OR = 15;
  /** RegularExpression Id. */
  int NOT = 16;
  /** RegularExpression Id. */
  int DATATYPE = 17;
  /** RegularExpression Id. */
  int INT = 18;
  /** RegularExpression Id. */
  int REAL = 19;
  /** RegularExpression Id. */
  int SEMICOLON = 20;
  /** RegularExpression Id. */
  int OBRA = 21;
  /** RegularExpression Id. */
  int CBRA = 22;
  /** RegularExpression Id. */
  int COMMA = 23;
  /** RegularExpression Id. */
  int FROM = 24;
  /** RegularExpression Id. */
  int AS = 25;
  /** RegularExpression Id. */
  int JOIN = 26;
  /** RegularExpression Id. */
  int ON = 27;
  /** RegularExpression Id. */
  int FILE = 28;
  /** RegularExpression Id. */
  int USING = 29;
  /** RegularExpression Id. */
  int CSV = 30;
  /** RegularExpression Id. */
  int BOOLEAN_COMPARISON = 31;
  /** RegularExpression Id. */
  int COUNT = 32;
  /** RegularExpression Id. */
  int BINARYOPERATOR = 33;
  /** RegularExpression Id. */
  int FLOATING_POINT_LITERAL = 34;
  /** RegularExpression Id. */
  int EXPONENT = 35;
  /** RegularExpression Id. */
  int FILENAME = 36;
  /** RegularExpression Id. */
  int TEST = 37;
  /** RegularExpression Id. */
  int DAT = 38;
  /** RegularExpression Id. */
  int WHERE = 39;
  /** RegularExpression Id. */
  int AGGREGATE = 40;
  /** RegularExpression Id. */
  int MIN = 41;
  /** RegularExpression Id. */
  int SUM = 42;
  /** RegularExpression Id. */
  int AVG = 43;
  /** RegularExpression Id. */
  int MAX = 44;
  /** RegularExpression Id. */
  int EQUAL = 45;
  /** RegularExpression Id. */
  int COLNAME = 46;
  /** RegularExpression Id. */
  int DOT = 47;
  /** RegularExpression Id. */
  int STRING_LITERAL = 48;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\n\\r\"",
    "\"\\\\\"",
    "\"\\t\"",
    "\" \"",
    "\"CREATE TABLE\"",
    "\"Select\"",
    "<BOOLEAN_LITERALS>",
    "\"true\"",
    "\"false\"",
    "<BOOLEAN_OPERATORS>",
    "\"UNION\"",
    "\"AND\"",
    "\"OR\"",
    "\"NOT\"",
    "<DATATYPE>",
    "\"int\"",
    "\"real\"",
    "\";\"",
    "<OBRA>",
    "<CBRA>",
    "\",\"",
    "\"From\"",
    "\"AS\"",
    "\"JOIN\"",
    "\"ON\"",
    "\"File\"",
    "\"USING\"",
    "\"CSV\"",
    "<BOOLEAN_COMPARISON>",
    "\"COUNT\"",
    "<BINARYOPERATOR>",
    "<FLOATING_POINT_LITERAL>",
    "<EXPONENT>",
    "<FILENAME>",
    "\"test\"",
    "\"dat\"",
    "\"WHERE\"",
    "<AGGREGATE>",
    "\"MIN\"",
    "\"SUM\"",
    "\"AVG\"",
    "\"MAX\"",
    "\"=\"",
    "<COLNAME>",
    "\".\"",
    "<STRING_LITERAL>",
  };

}
